kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config
data:
  nginx.conf: |
    worker_processes  1;
    events {
      worker_connections  1024;
    }
    http {
      include       mime.types;
      default_type  application/octet-stream;

      lua_shared_dict prometheus_metrics 10M;
      lua_package_path "/etc/nginx/nginx-lua-prometheus/prometheus.lua";
      init_by_lua '
        prometheus = require("prometheus").init("prometheus_metrics")
        metric_requests = prometheus:counter(
          "nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
        metric_latency = prometheus:histogram(
          "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
        metric_connections = prometheus:gauge(
          "nginx_http_connections", "Number of HTTP connections", {"state"})
      ';
      log_by_lua '
        metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
        metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
      ';

      client_body_temp_path /var/run/openresty/nginx-client-body;
      proxy_temp_path       /var/run/openresty/nginx-proxy;
      fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
      uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
      scgi_temp_path        /var/run/openresty/nginx-scgi;

      sendfile        on;
      #tcp_nopush     on;

      #keepalive_timeout  0;
      keepalive_timeout  65;
      
      # include /etc/nginx/conf.d/*.conf;
      server {
        listen 9145;
        # allow 192.168.0.0/16;
        # deny all;
        location /metrics {
          content_by_lua '
            metric_connections:set(ngx.var.connections_reading, {"reading"})
            metric_connections:set(ngx.var.connections_waiting, {"waiting"})
            metric_connections:set(ngx.var.connections_writing, {"writing"})
            prometheus:collect()
          ';
        }
      }

      server {
        listen 80 default_server;
        listen [::]:80 default_server;
        
        # Set nginx to serve files from the shared volume!
        root /var/www/html;
        server_name _;
        location / {
          try_files $uri $uri/ =404;
        }
        location ~ \.php$ {
          include fastcgi_params;
          fastcgi_param REQUEST_METHOD $request_method;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_pass 127.0.0.1:9000;
        }
        location /stub_status {
          stub_status;
          # allow 127.0.0.1;
          # deny all;
        }
      }
    }
    